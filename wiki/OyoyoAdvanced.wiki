#summary Advanced Usage of Oyoyo
#labels Featured
#sidebar TableOfContents

= Introduction =

Below describes and shows examples for some more advanced features of using the Oyoyo IRC library.

This page is a work in progress.


= Logging =

Oyoyo uses the python [http://docs.python.org/library/logging.html logging] library by default to write information about what's going on with the connection and how it's being handled. 

The logging module uses different logging "levels" to categorize different types of logging messages. The different levels follow a hierarchy, and you can set what you want to be printed on the screen by calling a function on the logging module.
{{{
import logging                            # defines DEBUG, INFO, WARNING, ERROR, CRITICAL constants
logging.basicConfig(level=logging.DEBUG)  # everything above DEBUG will now be printed 
}}}

Below is a brief synopsis of different types of messages sent to the logger.
|| *Logging Level* || Information || 
||ERROR||An exception occurred while calling a method in a command handler, includes formatted traceback||
||ERROR||An error while reading the connection, includes formatted traceback||
||INFO||Any message sent to IRC socket||
||INFO||Beginning to connect IRC server||
||INFO||Closing connection to IRC server||
||INFO||Adding a new client to an IRCApp instance||
||INFO||Adding a new timer callback to an IRCApp instance||
||INFO||Stopping the IRCApp loop because no more clients left alive||
||INFO||Calling a new timer callback||
||DEBUG||Processing a command in the command handler, including the function repr||
||DEBUG||A command was received that was not implemented by the command handler||